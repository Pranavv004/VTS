package com.example.Client.PacketHandling;

public record LocationPacket(  //immutable data objects
    String startChar,
    String header,
    String vendorId,
    String firmwareVersion,
    String packetType,
    String packetId,
    String packetStatus,
    String imei,
    String vehicleRegNo,
    String gpsFix,
    String date,
    String time,
    double latitude,
    String latitudeDir,
    double longitude,
    String longitudeDir,
    double speed,
    double heading,
    int noOfSatellites,
    double altitude,
    double pdop,
    double hdop,
    String networkOperator,
    String ignitionStatus,
    String mainPowerStatus,
    double mainInputVoltage,
    double internalBatteryVoltage,
    String emergencyStatus,
    String tamperAlert,
    int gsmSignalStrength,
    String mcc,
    String mnc,
    String lac,
    String cellId,
    String neighborCellId1,
    String neighborLac1,
    String neighborSignalStrength1,
    String neighborCellId2,
    String neighborLac2,
    String neighborSignalStrength2,
    String neighborCellId3,
    String neighborLac3,
    String neighborSignalStrength3,
    String neighborCellId4,
    String neighborLac4,
    String neighborSignalStrength4,
    String digitalInputStatus,
    String digitalOutputStatus,
    String frameNumber,
    String checksum,
    String endChar
) {
    @Override
    public String toString() {
        return String.format(
            "%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%.6f,%s,%.6f,%s,%.2f,%.2f,%d,%.1f,%.3f,%.3f,%s,%s,%s,%.1f,%.2f,%s,%s,%d,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s",
            startChar, header, vendorId, firmwareVersion, packetType, packetId, packetStatus, imei, vehicleRegNo, gpsFix,
            date, time, latitude, latitudeDir, longitude, longitudeDir, speed, heading, noOfSatellites,
            altitude, pdop, hdop, networkOperator, ignitionStatus, mainPowerStatus, mainInputVoltage,
            internalBatteryVoltage, emergencyStatus, tamperAlert, gsmSignalStrength, mcc, mnc, lac, cellId,
            neighborCellId1, neighborLac1, neighborSignalStrength1, neighborCellId2, neighborLac2,
            neighborSignalStrength2, neighborCellId3, neighborLac3, neighborSignalStrength3,
            neighborCellId4, neighborLac4, neighborSignalStrength4, digitalInputStatus, digitalOutputStatus,
            frameNumber, checksum, endChar
        );
    }
}