package com.example.Client.packets;

public record LocationPacket(
        String startChar,
        String header,
        String vendorId,
        String firmwareVersion,
        String packetType,
        String packetId,
        String packetStatus,
        String imei,
        String vehicleRegNo,
        String gpsFix,
        String date,
        String time,
        double latitude,
        String latitudeDir,
        double longitude,
        String longitudeDir,
        double speed,
        double heading,
        int noOfSatellites,
        double altitude,
        double pdop,
        double hdop,
        String networkOperator,
        String ignitionStatus,
        String mainPowerStatus,
        double mainInputVoltage,
        double internalBatteryVoltage,
        String emergencyStatus,
        String tamperAlert,
        int gsmSignalStrength,
        String mcc,
        String mnc,
        String lac,
        String cellId1,
        String cellIdNeighbour1,
        String lacNeighbour1,
        String signalStrengthNeighbour1,
        String cellIdNeighbour2,
        String lacNeighbour2,
        String signalStrengthNeighbour2,
        String cellIdNeighbour3,
        String lacNeighbour3,
        String signalStrengthNeighbour3,
        String cellIdNeighbour4,
        String lacNeighbour4,
        String signalStrengthNeighbour4,
        String digitalInputStatus,
        String digitalOutputStatus,
        String frameNumber,
        String checksum,
        String endChar
) {
    @Override
    public String toString() {
        return String.format("%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%.6f,%s,%.6f,%s,%.2f,%.2f,%d,%.1f,%.3f,%.3f,%s,%s,%s,%.1f,%.2f,%s,%s,%d,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s",
                startChar, header, vendorId, firmwareVersion, packetType, packetId, packetStatus, imei, vehicleRegNo,
                gpsFix, date, time, latitude, latitudeDir, longitude, longitudeDir, speed, heading, noOfSatellites,
                altitude, pdop, hdop, networkOperator, ignitionStatus, mainPowerStatus, mainInputVoltage,
                internalBatteryVoltage, emergencyStatus, tamperAlert, gsmSignalStrength, mcc, mnc, lac, cellId1,
                cellIdNeighbour1, lacNeighbour1, signalStrengthNeighbour1, cellIdNeighbour2, lacNeighbour2,
                signalStrengthNeighbour2, cellIdNeighbour3, lacNeighbour3, signalStrengthNeighbour3, cellIdNeighbour4,
                lacNeighbour4, signalStrengthNeighbour4, digitalInputStatus, digitalOutputStatus, frameNumber, checksum,
                endChar);
    }
}